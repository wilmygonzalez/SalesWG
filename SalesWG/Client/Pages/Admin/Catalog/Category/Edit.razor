@using SalesWG.Shared.Admin.Models.Catalog.Category
@using SalesWG.Shared.Admin.Requests.Catalog.Category
@inject HttpClient _httpClient

<EditForm Model="@category" OnValidSubmit="SaveAsync">
    <DataAnnotationsValidator />
    <MudDialog ClassActions="mud-dialog-actions px-6 py-4">
    <DialogContent>
        <MudTextField @bind-Value="category.Name" For="@(() => category.Name)" 
            Label="Name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
        <MudTextField @bind-Value="category.Description" For="@(() => category.Description)" 
            T="string" Label="Description" Variant="Variant.Outlined" Margin="Margin.Dense" Lines="7" />
         <MudAutocomplete T="ParentCategory" Label="Parent Category" @bind-Value="category.ParentCategory" SearchFunc="@SearchCategory" 
            Margin="Margin.Dense" Variant="Variant.Outlined" ToStringFunc="@(e => e.Name)" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit" StartIcon="@Icons.Filled.Save" Variant="Variant.Filled" Color="Color.Success">Save Changes</MudButton>
    </DialogActions>
</MudDialog>
</EditForm>

@code {
    [CascadingParameter] MudDialogInstance _mudDialog { get; set; }

    [Parameter] public AddEditCategoryRequest category { get; set; }

    private async Task SaveAsync()
    {
        await _httpClient.PutAsJsonAsync("/api/admin/category/UpdateCategory", category);
        _mudDialog.Close(DialogResult.Ok(true));
    }

    private async Task<IEnumerable<ParentCategory>> SearchCategory(string name)
    {
        return await _httpClient.GetFromJsonAsync<IEnumerable<ParentCategory>>($"/api/admin/category/GetParentCategoriesBySearch/{name}");
    }

    private void Cancel()
    {
        _mudDialog.Cancel();
    }
}